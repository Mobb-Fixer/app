stages:
    - test
    - prepare
    - release

include:
    - template: Security/Secret-Detection.gitlab-ci.yml

.common: &common
    tags:
        - shell
    rules:
        -   if: $CI_COMMIT_TAG
        -   if: $CI_COMMIT_BRANCH == "main"
        -   if: $CI_COMMIT_BRANCH == "dev"
    interruptible: true
    before_script:
        - export TAG=$(date '+%y.%m.%d')
        - printenv
        - cp common-helper.js ./front/src/shared/common-helper.js
        - cp common-helper.js ./back/src/shared/common-helper.js
        - >
            if [ $(uname) == "Darwin" ]; then
            	sed -i '' "s/PACKAGE_VERSION/${TAG}/g" ./back/package.json
            	sed -i '' "s/PACKAGE_VERSION/${TAG}/g" front/package.json
            else
            	sed -i "s/PACKAGE_VERSION/${TAG}/g" back/package.json
            	sed -i "s/PACKAGE_VERSION/${TAG}/g" front/package.json
            fi


#-----------------------------------------


eslint:
    stage: test
    image: registry.gitlab.com/pipeline-components/eslint:latest
    script:
        - cd back
        - eslint --color .


#-----------------------------------------


prepare:
    <<: *common
    stage: prepare
    image: node:alpine
    script:
        - cd front
        - pnpm install --prod --frozen-lockfile
        - pnpm run build
        - ./changelog.js ./dist/webdb/changelog.html
    artifacts:
        paths:
            - ./front/dist/webdb/


#-----------------------------------------

docker:
    <<: *common
    dependencies:
        - prepare
    stage: release
    image: docker:latest
    variables:
        IMAGE_NAME: webdb/app
    script:
        - cp -fr ./front/dist/webdb/* ./back/static/
        - cd back
        - docker login -u 'webdb' -p $DOCKER_PASS
        - docker buildx create --use
        - >
            if [ "$CI_COMMIT_REF_NAME" == "main" ]; then
                docker buildx build --cache-from $IMAGE_NAME:$CI_COMMIT_REF_NAME --platform linux/arm64,linux/amd64 -t $IMAGE_NAME:$CI_COMMIT_REF_NAME -t $IMAGE_NAME:$TAG -t $IMAGE_NAME --push .
            else
                docker buildx build --cache-from $IMAGE_NAME:$CI_COMMIT_REF_NAME --platform linux/arm64,linux/amd64 -t $IMAGE_NAME:$CI_COMMIT_REF_NAME --push .
            fi
